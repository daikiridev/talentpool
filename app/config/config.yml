# app/config/config.yml

imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: assetic.yml }
    
    # Sonata Core Bundles
    - { resource: sonata/sonata_core.yml }
    - { resource: sonata/sonata_block.yml }
    - { resource: sonata/sonata_classification.yml }

    
    # Sonata Feature Bundles
    - { resource: sonata/sonata_admin.yml }
    - { resource: sonata/sonata_media.yml }
    - { resource: sonata/sonata_user.yml }
    
    # Other stuff
    - { resource: other/doctrine_extensions.yml }
#    - { resource: other/ckeditor.yml }

framework:
    #esi:             ~
    translator:
        fallback:           "%locale%"
    secret:                 "%secret%"
    router:
        resource:           "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:                   ~
    csrf_protection:        ~
    validation:
        enable_annotations: true
    templating:
        engines:            ['twig']
        #assets_version: SomeVersionScheme
    default_locale:         "%locale%"
    trusted_proxies:        ~
    session:                ~
    fragments:              ~
    http_method_override:   true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    form:
        resources:
            # other files
            - 'SonataMediaBundle:Form:media_widgets.html.twig'
            - 'TEWTPBundle:Form:tew_widgets.html.twig'
   

# Doctrine Configuration
doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8

        types:
            json: Sonata\Doctrine\Types\JsonType

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
    
        entity_managers:
            default:
                #auto_mapping: true
                mappings: # to be declared for each entity in MySQL DB
                    ApplicationSonataMediaBundle: ~
                    TEWTPBundle: ~
                    TEWUserBundle: ~
                    SonataUserBundle: ~
                    FOSUserBundle: ~
                    SonataMediaBundle: ~
                    SonataClassificationBundle: ~
                    HackzillaTicketBundle: ~
                    #FogsTaggingBundle: ~
                    taggable:
                            type: annotation
                            prefix: DoctrineExtensions\Taggable\Entity
                            dir: "%kernel.root_dir%/../vendor/fpn/doctrine-extensions-taggable/metadata"
                    # GEDMO extensions ->
                    translatable:
                        type: annotation
                        alias: Gedmo
                        prefix: Gedmo\Translatable\Entity
                        # make sure vendor library location is correct
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Translatable/Entity"
                    loggable:
                        type: annotation
                        alias: Gedmo
                        prefix: Gedmo\Loggable\Entity
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Loggable/Entity"
                    tree:
                        type: annotation
                        alias: Gedmo
                        prefix: Gedmo\Tree\Entity
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Tree/Entity"
                    # <- GEDMO extensions

#doctrine_phpcr:
#    odm:
#        auto_mapping: true
#        mappings:
#            SonataMediaBundle:
#                prefix: Sonata\MediaBundle\PHPCR
                
# migrating entities after they've been modified
# (see app/console doctrine:migrations:diff)
doctrine_migrations:
    dir_name: %kernel.root_dir%/DoctrineMigrations
    namespace: Application\Migrations
    table_name: migration_versions
    name: Application Migrations

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
##    spool:     { type: memory }
#    spool:
#        type: file
#        path: "%kernel.root_dir%/spool"
    antiflood:
        threshold:  40
        sleep:      0
    logging: %kernel.debug%

# FOSUser Configuration
fos_user:
    db_driver: orm
    firewall_name: main
    user_class: TEW\UserBundle\Entity\User
    group:
        group_class: TEW\UserBundle\Entity\Group
        group_manager: sonata.user.orm.group_manager
    from_email:
        address: webmaster@tew-cc.com
        sender_name: TEW webmaster
    service:
        user_manager: sonata.user.orm.user_manager

# Tag management
fpn_tag:
    model:
        tag_class:     \TEW\TPBundle\Entity\Tag
        tagging_class: \TEW\TPBundle\Entity\Tagging


# Customizing Sonata classes
parameters:
# overloading the class, in order to change name of the files
    sonata.media.provider.file.class: Application\Sonata\MediaBundle\Provider\FileProvider

# Services (see src/TEW/TPBundle/Ressources/config/services.yml)
services:
    twig.extension.intl:
        class: Twig_Extensions_Extension_Intl
        tags:
            - { name: twig.extension }