{% extends '::base.html.twig' %}

{# if not using Application/Sonata/MediaBundle/Resources/Form/media_widgets.html.twig, uncomment the following line #}
{# {% form_theme form 'TEWTPBundle:Form:media_widgets.html.twig' %} #}

{% block styles %}
    <link rel="stylesheet" type="text/css" href="{{ asset('bundles/tewtp/css/jquery.tagsinput.css') }}" />
{% endblock styles %}
{% block scripts %}
    <script src="//ajax.googleapis.com/ajax/libs/jqueryui/1.11.2/jquery-ui.min.js"></script>
    <script src="{{ asset('bundles/tewtp/js/jquery.tagsinput.js') }}"></script>
    <script>
        $('.tags-field').tagsInput({
        'autocomplete_url': '{{ path('tew_json_allcandidatetags') }}',
        //'autocomplete':{},
                'height': '30px',
                'width': '400px'
                });
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?v=3.exp&signed_in=true&libraries=places&language=en"></script>
    <script src="{{ asset('bundles/tewtp/js/tew.candidate.edit.js') }}"></script>
    <script>
    {# if there is a new country in a mobility form, add the corresponding zone by an ajax request on tew_json_findzone #}
    $('.mobility_country').change(function(){
        alert('change country '+$(this).val());
        var zoneid = $(this).attr('id').replace((/country/), "zone");
        $.post( "{{ path('tew_json_findzone') }}", { country: $(this).val()} )
        .done(function( data ) {
            $('#'+zoneid).val(data.zone[0].id); // setting the right zone
            console.log(zoneid+': '+($('#'+zoneid).val()));
        })
         .fail(function() {
            alert( "The zone was not found, please reload the location" );
        })
        .always(function() {
            console( zoneid+" finished" );
        });
    });
    </script>
{% endblock scripts %}

{% block body -%}
    <h1>Candidate creation</h1>


    {#{ form(form) }#}
    {{ form_start(form) }}

    {{ form_widget(form.picture) }}
    {{ form_widget(form.gender) }}{{ form_widget(form.firstName) }} {{ form_widget(form.middleName) }} {{ form_widget(form.lastName) }}
    {{ form_row(form.dateOfBirth) }}
    {{ form_row(form.email) }}
    {{ form_row(form.phone1) }}
    {{ form_row(form.phone2) }}

    {#
     # We put in the "data-prototype" field the prototype widget
     # the so-called prototype is the prototype form for the Address class
     # see http://symfony.com/doc/2.3/cookbook/form/form_collections.html for more information
     #}
    <br/>
    <div>
    {{ form_row(form.addresses) }}
    </div>
    <br/>
    <div>
        <div>
            <label>{{ form_label(form.comments) }}</label>
            <div id="candidate_comments_new" class="form-collection" data-prototype="{{ form_widget(form.comments.vars.prototype)|e }}"></div>
        </div>
    </div>
    <div style="display: none">
        {{ form_row(form.comments) }}
    </div>
    <br/>
    {{ form_end(form, {'render_rest': true}) }}

{% block actions %}
    <div class="btn-toolbar pull-right record_actions" role="group">
        <div class="btn-group">
            <a role="button"  class="btn btn-info" href="{{ path('tew_candidate') }}">
                Back to the list
            </a>
        </div>
    </div>
{% endblock actions %}
{% endblock %}
