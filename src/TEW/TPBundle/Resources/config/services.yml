services:
    
# General credentials via voters
    owner_voter:
            class: TEW\TPBundle\Security\OwnerVoter
            public: false
            tags:
                - { name: security.voter }

#    twig.extension.intl:
#        class: Twig_Extensions_Extension_Intl
#        tags:
#            - { name: twig.extension }
            
#    twig.extension.tew.tp:
#        class: TEW\TPBundle\Twig\Extension\TPExtension
#        public: false
#        tags:
#            - {name: twig.extension }
#        arguments:
#            - {type=service, id:twig.loader}
#            
#    tew.tp.listener:
#        class: TEW\TPBundle\EventListener\ControllerListener
#        tags:
#            - {name: kernel.event_listener, event:kernel.controller, method:onKernelController}
#        arguments:
#            - {type=service, id:twig.extension.tew.tp}

    tew.listener.candidate:
        class: TEW\TPBundle\EventListener\CdteOperationListener
        arguments: ['@service_container']
        tags:
            - { name: doctrine.event_listener, event: postPersist }
            - { name: doctrine.event_listener, event: postUpdate }

# Twig filters
    tew.twig.tew_extension:
        class: TEW\TPBundle\Twig\Extension\TEWExtension
        tags:
            - { name: twig.extension } 

# Tags in buildForm            
    tew.form.tags:
        class: TEW\TPBundle\Form\TagsType
        arguments: [ "@fpn_tag.tag_manager" ]
        tags:
            - { name: form.type, alias: tags }
#    tew.listener.tag:
#        class: TEW\TPBundle\EventListener\TagListener
#        tags:
#            - { name: doctrine.event_subscriber, connection: default }
#        calls:
#        - [ setTagManager, [ @fpn_tag.tag_manager ] ]

# Modal collections in buildform
    tew.form.modalcollection:
        class: TEW\TPBundle\Form\ModalCollectionType
        arguments:
        tags:
            - { name: form.type, alias: modalcollection }
            
# Backoffice parameters...
#    tew_tp.admin.cdtelanguage:
#        class: TEW\TPBundle\Admin\CdteLanguageAdmin
#        arguments: [~, TEW\TPBundle\entity\CdteLanguage, TEWTPBundle:CdteLanguageAdmin]
#        tags:
#            - {name: sonata.admin, manager_type: orm, group: admin, label: CdteLanguage}
            
    tew_tp.admin.cdtefunction:
        class: TEW\TPBundle\Admin\CdteFunctionAdmin
        arguments: [~, TEW\TPBundle\Entity\CdteFunction, TEWTPBundle:CdteFunctionAdmin]
        tags:
            - {name: sonata.admin, manager_type: orm, group: admin, label: Functions}
            
    tew_tp.admin.cdtekeyword:
        class: TEW\TPBundle\Admin\CdteKeywordAdmin
        arguments: [~, TEW\TPBundle\Entity\CdteKeyword, TEWTPBundle:CdteKeywordAdmin]
        tags:
            - {name: sonata.admin, manager_type: orm, group: admin, label: Keywords}
            
    tew_tp.admin.cdtelevel:
        class: TEW\TPBundle\Admin\CdteLevelAdmin
        arguments: [~, TEW\TPBundle\Entity\CdteLevel, TEWTPBundle:CdteLevelAdmin]
        tags:
            - {name: sonata.admin, manager_type: orm, group: admin, label: Levels}
            
    tew_tp.admin.cdtestatus:
        class: TEW\TPBundle\Admin\CdteStatusAdmin
        arguments: [~, TEW\TPBundle\Entity\CdteStatus, TEWTPBundle:CdteStatusAdmin]
        tags:
            - {name: sonata.admin, manager_type: orm, group: admin, label: Cdte Status}
            
    tew_tp.admin.candidate:
        class: TEW\TPBundle\Admin\CandidateAdmin
        arguments: [~, TEW\TPBundle\Entity\Candidate, TEWTPBundle:CandidateAdmin]
        tags:
            - {name: sonata.admin, manager_type: orm, group: admin, label: Candidates}
            
    tew_tp.admin.talentpool:
        class: TEW\TPBundle\Admin\TalentPoolAdmin
        arguments: [~, TEW\TPBundle\Entity\TalentPool, TEWTPBundle:TalentPoolAdmin]
        tags:
            - {name: sonata.admin, manager_type: orm, group: admin, label: TalentPools}

    tew_user.admin.users:
        class: TEW\UserBundle\Admin\UserAdmin
        arguments: [~, TEW\UserBundle\Entity\User, TEWUserBundle:UserAdmin]
        tags:
            - {name: sonata.admin, manager_type: orm, group: admin, label: TEW Users}
            
# Frontoffice menu management
    # managing active links
    tew_tp.menu.voter.request:
        class: TEW\TPBundle\Menu\RequestVoter
        arguments:
            - @service_container
        tags:
            - { name: knp_menu.voter }
    # factory menu service
    tew_tp.menu_builder:
        class: TEW\TPBundle\Menu\MenuBuilder
        arguments: ["@knp_menu.factory", "@security.context", "@service_container"]

    # main front office menu
    tew_tp.menu.main:
        class: Knp\Menu\MenuItem # the service definition requires setting the class
        factory_service: tew_tp.menu_builder
        factory_method: createMainMenu
        arguments: ["@request"]
        scope: request # needed as we have the request as a dependency here
        tags:
            - { name: knp_menu.menu, alias: tp_topmenu_main } # alias is the name called in the twig view
            
    tew_tp.menu.user:
        class: Knp\Menu\MenuItem # the service definition requires setting the class
        factory_service: tew_tp.menu_builder
        factory_method: createUserMenu
        arguments: ["@request"]
        scope: request # needed as we have the request as a dependency here
        tags:
            - { name: knp_menu.menu, alias: tp_topmenu_user } # alias is the name called in the twig view

